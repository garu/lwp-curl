.\" Automatically generated by Pod::Man 2.12 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LWP::Curl 3"
.TH LWP::Curl 3 "2008-12-04" "perl v5.8.8" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
LWP::Curl \- LWP methods implementation with Curl engine
.SH "VERSION"
.IX Header "VERSION"
Version 0.03
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Use libcurl like \s-1LWP\s0, \f(CW$lwpcurl\fR\->get($url), \f(CW$lwpcurl\fR\->timeout(15) don't care about Curl \s-1API\s0 and don't care about html encode
.PP
.Vb 1
\&    use LWP::Curl;
\&
\&    my $lwpcurl = LWP::Curl\->new();
\&        my $content = $lwpcurl\->get('http://search.cpan.org','http://www.cpan.org'); 
\&        #get the page http://search.cpan.org passing with referer http://www.cpan.org
.Ve
.SH "Constructor"
.IX Header "Constructor"
.Sh "\fInew()\fP"
.IX Subsection "new()"
Creates and returns a new LWP::Curl object, hereafter referred to as
the \*(L"lwpcurl\*(R".
.PP
.Vb 1
\&    my $lwpcurl = LWP::Curl\->new()
.Ve
.IP "\(bu" 4
\&\f(CW\*(C`timeout => sec\*(C'\fR
.Sp
Set the timeout value in seconds. The default timeout value is
180 seconds, i.e. 3 minutes.
.IP "\(bu" 4
\&\f(CW\*(C`headers => [0|1]\*(C'\fR
.Sp
Show \s-1HTTP\s0 headers when return a content. The default is false '0'
.IP "\(bu" 4
\&\f(CW\*(C`user_agent => 'agent86'\*(C'\fR
.Sp
Set the user agent string. The default is  'Mozilla/4.0 (compatible; \s-1MSIE\s0 6.0; Windows \s-1NT\s0 5.1)'
.IP "\(bu" 4
\&\f(CW\*(C`followlocation => [0|1]\*(C'\fR
.Sp
If the spider receive a \s-1HTTP\s0 301 ( Redirect ) they will follow?. The default is 1.
.IP "\(bu" 4
\&\f(CW\*(C`auto_encode => [0|1]\*(C'\fR
.Sp
Turn on/off auto encode urls, for get/post.
.IP "\(bu" 4
\&\f(CW\*(C`maxredirs => number\*(C'\fR
.Sp
Set how deep the spider will follow  when receive \s-1HTTP\s0 301 ( Redirect ). The default is 3.
.SH "METHODS"
.IX Header "METHODS"
.ie n .Sh "$lwpcurl\->get($url,$referer)"
.el .Sh "\f(CW$lwpcurl\fP\->get($url,$referer)"
.IX Subsection "$lwpcurl->get($url,$referer)"
.Vb 1
\&  Get content of $url, passando $referer se definido
\&
\&    use LWP::Curl;
\&        my $referer = 'http://www.example.com';
\&        my $get_url = 'http://www.example.com/foo';
\&    my $lwpcurl = LWP::Curl\->new();
\&        my $content = $lwpcurl\->get($get_url, $referer);
.Ve
.ie n .Sh "$lwpcurl\->post($url,$hash_form,$referer)"
.el .Sh "\f(CW$lwpcurl\fP\->post($url,$hash_form,$referer)"
.IX Subsection "$lwpcurl->post($url,$hash_form,$referer)"
.Vb 1
\&  POST the $hash_form fields in $url, passing $referer if defined
\&
\&    use LWP::Curl;
\&
\&    my $lwpcurl = LWP::Curl\->new();
\&
\&        my $referer = 'http://www.examplesite.com/';
\&        my $post_url = 'http://www.examplesite.com/post/';
\&
\&        my $hash_form = { 
\&                'field1' => 'value1',
\&                'field2' => 'value2',
\&        }
\&
\&        my $content = $lwpcurl\->post($post_url, $hash_form, $referer);
.Ve
.ie n .Sh "$lwpcurl\->timeout($sec)"
.el .Sh "\f(CW$lwpcurl\fP\->timeout($sec)"
.IX Subsection "$lwpcurl->timeout($sec)"
.Vb 1
\&  Set timeout, default 180
.Ve
.ie n .Sh "$lwpcurl\->auto_encode($value)"
.el .Sh "\f(CW$lwpcurl\fP\->auto_encode($value)"
.IX Subsection "$lwpcurl->auto_encode($value)"
.Vb 1
\&  Turn on/off auto_encode
.Ve
.ie n .Sh "$lwpcurl\->agent_alias($alias)"
.el .Sh "\f(CW$lwpcurl\fP\->agent_alias($alias)"
.IX Subsection "$lwpcurl->agent_alias($alias)"
.Vb 4
\&   Copy from L<WWW::Mechanize> begin here
\&   _\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_
\&   Sets the user agent string to the expanded version from a table of actual user strings.
\&   I<$alias> can be one of the following:
.Ve
.IP "\(bu" 4
Windows \s-1IE\s0 6
.IP "\(bu" 4
Windows Mozilla
.IP "\(bu" 4
Mac Safari
.IP "\(bu" 4
Mac Mozilla
.IP "\(bu" 4
Linux Mozilla
.IP "\(bu" 4
Linux Konqueror
.PP
.Vb 2
\&   then it will be replaced with a more interesting one.  For instance,
\&   _\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_
\&
\&   Copy from L<WWW::Mechanize> ends here, but the idea and the data structure is a copy too :) 
\&   
\&   $lwpcurl\->agent_alias( 'Windows IE 6' );
\&
\&           sets your User\-Agent to
\&            
\&                Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
.Ve
.SH "TODO"
.IX Header "TODO"
This is a small list of features I'm plan to add. Feel free to contribute with your wishlist and comentaries!
.IP "\(bu" 4
Test for the upload method
.IP "\(bu" 4
Improve the Documentation and tests
.IP "\(bu" 4
Support Cookies
.IP "\(bu" 4
Support Proxys
.IP "\(bu" 4
\&\s-1PASS\s0 in all tests of \s-1LWP\s0
.IP "\(bu" 4
Make a patch to WWW::Mechanize, todo change engine, like \*(L"new(engine => 'LWP::Curl')\*(R"
.SH "AUTHOR"
.IX Header "AUTHOR"
Lindolfo Rodrigues de Oliveira Neto, \f(CW\*(C`<lorn at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-lwp\-curl at rt.cpan.org\*(C'\fR, or through
the web interface at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=LWP\-Curl>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc LWP::Curl
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT:\s0 \s-1CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=LWP\-Curl>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/LWP\-Curl>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/LWP\-Curl>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/LWP\-Curl>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
Thanks to Breno G. Oliveira for the great tips.
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2008 Lindolfo Rodrigues de Oliveira Neto, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
